{"version":3,"sources":["pages/Home.js","components/globals/Layout.js","components/globals/Theme.js","RoutedApp.js","pages/About.js","components/hooks/useDarkMode.js","index.js"],"names":["Home","motion","div","initial","scaleY","animate","exit","transition","duration","Layout","children","toggleTheme","id","to","onClick","DarkTheme","colors","body","title","font","LightTheme","GlobalStyle","createGlobalStyle","theme","RouteMap","RoutedApp","location","useLocation","useState","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","console","log","useDarkMode","themeMode","AnimatePresence","exitBeforeEnter","exact","path","map","route","idx","component","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEaA,EAAO,WAChB,OACI,cAACC,EAAA,EAAOC,IAAR,CACAC,QAAS,CAAEC,OAAQ,GACnBC,QAAS,CAAED,OAAQ,GACnBE,KAAM,CAAEF,OAAQ,GAChBG,WAAY,CAAEC,SAAU,IAJxB,iBCFKC,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAE9B,OACI,qCACA,iCACA,qBAAIC,GAAG,aAAP,UACQ,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEA,6BACA,wBAAQC,QAASH,EAAjB,2BAMR,+BAEKD,IAEL,gD,QCzBKK,EAAY,CACrBC,OAAQ,CACJC,KAAM,UACNC,MAAO,UACPC,KAAM,YAIDC,EAAa,CACtBJ,OAAQ,CACJC,KAAM,UACNC,MAAO,UACPC,KAAM,YAIDE,EAAcC,YAAH,+aAEF,qBAAGC,MAAkBP,OAAOC,QACjC,qBAAEM,MAAiBP,OAAOG,QAa1B,qBAAEI,MAAiBP,OAAOE,SC1BrCM,EAAW,CACb,CACI,KAAQ,SACR,UCVa,WACjB,OACI,cAACvB,EAAA,EAAOC,IAAR,CACAC,QAAS,CAAEC,OAAQ,GACnBC,QAAS,CAAED,OAAQ,GACnBE,KAAM,CAAEF,OAAQ,GAChBG,WAAY,CAAEC,SAAU,IAJxB,mBDYKiB,EAAY,WACrB,IAAMC,EAAWC,cADU,EEbJ,WAAO,IAAD,EACLC,mBAAS,SADJ,mBACxBL,EADwB,KACjBM,EADiB,OAEiBD,oBAAS,GAF1B,mBAExBE,EAFwB,KAENC,EAFM,KAGzBC,EAAU,SAAAC,GACdC,OAAOC,aAAaC,QAAQ,QAASH,GACrCJ,EAASI,IAqBX,OATAI,qBAAU,WACR,IAAMC,EAAaJ,OAAOC,aAAaI,QAAQ,SAC/CL,OAAOM,YAAcN,OAAOM,WAAW,gCAAgCC,UAAYH,EACjFN,EAAQ,QACRM,EACET,EAASS,GACTN,EAAQ,SACZD,GAAoB,KACnB,IACI,CAACR,EAlBY,WAChBmB,QAAQC,IAAI,WAEZX,EADY,UAAVT,EACM,OAEA,UAagBO,GFXqBc,GAFpB,mBAEpBrB,EAFoB,KAEbZ,EAFa,KAEAmB,EAFA,KAIrBe,EAAsB,UAAVtB,EAAoBH,EAAaL,EAGnD,OAAKe,EAOD,cAAC,IAAD,CAAeP,MAAOsB,EAAtB,SACI,qCACA,cAACxB,EAAD,IACA,cAACyB,EAAA,EAAD,CAAiBC,iBAAe,EAAC5C,SAAS,EAA1C,SACI,cAAC,EAAD,CAAQQ,YAAaA,EAArB,SACI,eAAC,IAAD,CAAQe,SAAUA,EAAlB,UACI,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGAzB,EAAS0B,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,IAAD,CAAiBH,KAAME,EAAMF,KAAMI,UAAWF,EAAME,WAAxCD,QANS1B,EAAS4B,mBAXjD,yBGlBbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.355139bc.chunk.js","sourcesContent":["import { motion } from \"framer-motion\"\n\nexport const Home = () => {\n    return(\n        <motion.div\n        initial={{ scaleY: 0 }}\n        animate={{ scaleY: 1 }}\n        exit={{ scaleY: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n            hi\n        </motion.div>\n    )\n}","import {  Link } from \"react-router-dom\";\n\nexport const Layout = ({children, toggleTheme}) => {\n\n    return(\n        <>\n        <header>\n        <ul id=\"navigation\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                <Link to=\"/about\">About</Link>\n                </li>\n                <li>\n                <Link to=\"/contact\">Contact</Link>\n                </li>\n                <li>\n                <button onClick={toggleTheme} >\n                    Toggle\n                </button>\n                </li>\n              </ul>\n        </header>\n        <main>\n      \n            {children}\n        </main>\n        <footer>\n            footer\n        </footer>\n        </>\n    )\n}","import { createGlobalStyle } from 'styled-components';\n\n\nexport const DarkTheme = {\n    colors: {\n        body: \"#171717\",\n        title: \"#5db6a6\",\n        font: \"#ecf0f1\",\n    }\n}\n\nexport const LightTheme = {\n    colors: {\n        body: \"#ecf0f1\",\n        title: \"#5db6a6\",\n        font: \"#171717\"\n    }\n}\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        background: ${({ theme }) => theme.colors.body};\n        color: ${({theme}) => theme.colors.font};\n        font-family: Roboto, sans-serif;\n        transition: all 0.25s linear;\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    legend,\n    a,\n    label {\n        color: ${({theme}) => theme.colors.title};\n    }\n    .logo {\n        font-size:24px;fill:#5db6a6;font-family:Overpass-ExtraLightItalic, Overpass;font-weight:200;font-style:italic;\n    }\n`;","import { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components';\nimport { AnimatePresence } from 'framer-motion';\nimport { useLocation } from 'react-router-dom';\n\nimport * as Pages from './pages';\nimport { Layout, GlobalStyle, DarkTheme, LightTheme } from './components/globals';\nimport { useDarkMode } from \"./components/hooks\";\n\nconst RouteMap = [\n    {   \n        'path': '/about',\n        'component': Pages.About\n    }\n]\n\nexport const RoutedApp = () => {\n    const location = useLocation();\n    const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n    const themeMode = theme === 'light' ? LightTheme : DarkTheme;\n  \n\n    if (!componentMounted) {\n      return <div />\n    };\n\n   \n  \n    return(\n        <ThemeProvider theme={themeMode}>\n            <>\n            <GlobalStyle />\n            <AnimatePresence exitBeforeEnter initial={false}>\n                <Layout toggleTheme={toggleTheme}>\n                    <Switch location={location} key={location.pathname}>\n                        <Route exact path=\"/\">\n                            <Pages.Home />\n                        </Route>\n                        {\n                            RouteMap.map((route, idx) => (\n                                <Route key={idx} path={route.path} component={route.component} />\n                                ))\n                            }   \n                    </Switch>\n                </Layout>\n            </AnimatePresence>\n            </>\n        </ThemeProvider>\n    )\n}","import { motion } from \"framer-motion\"\n\nexport const About = () => {\n    return(\n        <motion.div\n        initial={{ scaleY: 0 }}\n        animate={{ scaleY: 1 }}\n        exit={{ scaleY: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n            hi\n        </motion.div>\n    )\n}","// useDarkMode.js\nimport { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n      console.log(\"clicked\");\n    if (theme === 'light') {\n      setMode('dark')\n    } else {\n      setMode('light')\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme ?\n      setMode('dark') :\n      localTheme ?\n        setTheme(localTheme) :\n        setMode('light');\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted]\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { RoutedApp } from './RoutedApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <RoutedApp />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}