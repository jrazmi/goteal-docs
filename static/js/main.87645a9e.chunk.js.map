{"version":3,"sources":["pages/Home.js","components/hooks/useDarkMode.js","components/globals/styled/MainNavBar.js","components/globals/styled/index.js","components/globals/Layout.js","components/globals/Theme.js","RoutedApp.js","pages/About.js","index.js"],"names":["Home","motion","div","initial","scaleY","animate","exit","transition","duration","useDarkMode","useState","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","console","log","Navbar","styled","BSNavbar","props","colors","body","Nav","BSNav","MainNavBar","toggleTheme","expand","Container","Brand","as","Link","to","src","process","Toggle","aria-controls","Collapse","id","className","onClick","Main","Layout","children","DarkTheme","title","font","LightTheme","GlobalStyle","createGlobalStyle","normalize","RouteMap","RoutedApp","location","useLocation","themeMode","AnimatePresence","exitBeforeEnter","exact","path","map","route","idx","component","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87645a9e.chunk.js","sourcesContent":["import { motion } from \"framer-motion\"\n\nexport const Home = () => {\n    return(\n        <motion.div\n        initial={{ scaleY: 0 }}\n        animate={{ scaleY: 1 }}\n        exit={{ scaleY: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n            I'm a bunch of content\n\n            <p>yep</p>\n            <p>nope</p>\n        </motion.div>\n    )\n}","// useDarkMode.js\nimport { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n      console.log(\"clicked\");\n    if (theme === 'light') {\n      setMode('dark')\n    } else {\n      setMode('light')\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme ?\n      setMode('dark') :\n      localTheme ?\n        setTheme(localTheme) :\n        setMode('light');\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted]\n};","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { Navbar as BSNavbar, Container, Nav as BSNav } from 'react-bootstrap';\nimport { useDarkMode } from '../../hooks';\n\nconst Navbar = styled(BSNavbar)`\n    width: 100%;\n    background-color: ${props => props.theme.colors.body};\n    .navbar-brand {\n        img {\n            width: 100px;\n        }\n    }\n`;\nconst Nav = styled(BSNav)`\n        \n    \n`;\n    \n\n\nexport const MainNavBar = ({toggleTheme}) => {\n    const [theme] = useDarkMode();\n    return(\n        <Navbar expand=\"lg\">\n            <Container>\n            <Navbar.Brand  as={Link} to=\"/\">\n                { theme === 'light' ? (\n                    <img src={`${process.env.PUBLIC_URL}/img/goteal_horizontal.png`} />\n                ) : (\n                    <img src={`${process.env.PUBLIC_URL}/img/goteal_horizontal_white.png`} />\n                )}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n                <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n                \n                <Nav.Link onClick={toggleTheme}>\n                    Toggle\n                </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n\n            </Container>\n        </Navbar>\n       \n    )\n}","import styled from 'styled-components';\n\nexport { MainNavBar } from './MainNavBar';\nexport const Main = styled('main')`\ndisplay: flex;\nmin-height: 100vh;\n`;","\nimport { Main, MainNavBar } from \"./styled\";\n\nexport const Layout = ({children, toggleTheme}) => {\n\n    return(\n        <>\n        <header>\n            <MainNavBar toggleTheme={toggleTheme} />\n        </header>\n        <Main>\n            \n            {children}\n        </Main>\n        <footer>\n            footer\n        </footer>\n        </>\n    )\n}","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize'\n\n\nexport const DarkTheme = {\n    colors: {\n        body: \"#171717\",\n        title: \"#5db6a6\",\n        font: \"#ecf0f1\",\n    }\n}\n\nexport const LightTheme = {\n    colors: {\n        body: \"#ecf0f1\",\n        title: \"#5db6a6\",\n        font: \"#171717\"\n    }\n}\n\nexport const GlobalStyle = createGlobalStyle`\n    ${normalize}\n    *:focus {\n        outline: none !important;\n        box-shadow: none !important;\n    } \n    body {\n        background: ${({theme}) => theme.colors.body};\n        color: ${({theme}) => theme.colors.font};\n        font-family: Overpass, sans-serif;\n        transition: all 0.25s linear;\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    legend,\n    a,\n    label {\n        color: ${({theme}) => theme.colors.title};\n    }\n    .logo {\n        font-size:24px;fill:#5db6a6;font-family:Overpass-ExtraLightItalic, Overpass;font-weight:200;font-style:italic;\n    }\n    .navbar {\n        .navbar-nav {\n            \n            .nav-link {\n                color: ${({theme}) => theme.colors.title};\n            }\n            .nav-link:hover,\n            .nav-link:focus,\n            .nav-link.active,\n            .nav-link:active {\n                color: ${({theme}) => theme.colors.font};\n            }\n            .show {\n                .nav-link {\n                    color: ${({theme}) => theme.colors.title};\n                }\n            }\n        }\n    }\n`;","import { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components';\nimport { AnimatePresence } from 'framer-motion';\nimport { useLocation } from 'react-router-dom';\n\nimport * as Pages from './pages';\nimport { Layout, GlobalStyle, DarkTheme, LightTheme } from './components/globals';\nimport { useDarkMode } from \"./components/hooks\";\n\nconst RouteMap = [\n    {   \n        'path': '/about',\n        'component': Pages.About\n    }\n]\n\nexport const RoutedApp = () => {\n    const location = useLocation();\n    const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n    const themeMode = theme === 'light' ? LightTheme : DarkTheme;\n  \n\n    if (!componentMounted) {\n      return <div />\n    };\n\n   \n  \n    return(\n        <ThemeProvider theme={themeMode}>\n            <>\n            <GlobalStyle />\n            <AnimatePresence exitBeforeEnter initial={false}>\n                <Layout toggleTheme={toggleTheme}>\n                    <Switch location={location} key={location.pathname}>\n                        <Route exact path=\"/\">\n                            <Pages.Home />\n                        </Route>\n                        {\n                            RouteMap.map((route, idx) => (\n                                <Route key={idx} path={route.path} component={route.component} />\n                                ))\n                            }   \n                    </Switch>\n                </Layout>\n            </AnimatePresence>\n            </>\n        </ThemeProvider>\n    )\n}","import { motion } from \"framer-motion\"\n\nexport const About = () => {\n    return(\n        <motion.div\n        initial={{ scaleY: 0 }}\n        animate={{ scaleY: 1 }}\n        exit={{ scaleY: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n            hi\n        </motion.div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { RoutedApp } from './RoutedApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <RoutedApp />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}